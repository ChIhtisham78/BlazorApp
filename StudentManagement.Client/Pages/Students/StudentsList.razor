@page "/student-lists"
@using StudentManagement.Client.Services
@using StudentManagement.Shared.Models
@inject NavigationManager navigation
@using StudentManagement.Shared.StudentRepository
@inject IJSRuntime Jsruntime
@inject IStudentRepository StudentService

@* <style>
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.4/css/all.min.css" integrity="sha384-DyZ88mC6Up2uqS2hK5eu5f3bcBrn5n2v6bq1j5thxWZ6L5qFqAHsiZ5eFZnn6yF" crossorigin="anonymous" >
</style> *@
<div class="container">
    <div class="row">
        <div class="d-flex mb-3 justify-content-end">
            <a href="/add-student" class="btn btn-primary btn-md">Add New Student</a>
        </div>
       
        <div class="col-md-12">
            <div class="card-header">
                <h5>Student List</h5>
            </div>
            <div class="card">
               
                @if (AllStudents.Any())
                {
                    <div class="card-body">
                        <table class="table table-bordered table-striped table-hovered">
                            <thead>
                                <tr>
                                    <th>Id</th>
                                    <th>Name</th>
                                    <th>Email</th>
                                    <th>Country</th>
                                    <th>Phone Number</th>
                                    <th>Address</th>
                                    <th>Actions</th>
                                </tr>
                            </thead>
                            <tbody>
                                @foreach (var student in AllStudents)
                                {
                                    <tr>
                                        <td>@student.Id</td>
                                        <td>@student.Name</td>
                                        <td>@student.Email</td>
                                        <td>@student.Country</td>
                                        <td>@student.PhoneNumber</td>
                                        <td>@student.Address</td>
                                        <td>
                                            <a href="/student/edit/@student.Id" class="text-success me-2">
                                                <i class="fas fa-pencil-alt"></i>
                                            </a>
                                            <a href="delete/student/@student.Id" @onclick="() => DeleteStudent(student.Id)" class="text-danger">
                                                <i class="fas fa-trash"></i>
                                            </a>
                                        </td>
                                    </tr>
                                }
                            </tbody>
                        </table>
                    </div>
                }
                else
                {
                    <div class="card-body">
                        <p><em>No students available.</em></p>
                    </div>
                }
            </div>
        </div>
    </div>
</div>

@code {
    public List<Student> AllStudents { get; set; } = new();
    [Parameter] public int id { get; set; }

    protected override async Task OnInitializedAsync()
    {
        await LoadAllStudents();
    }

    public async Task LoadAllStudents()
    {
        var students = await StudentService.GetAllStudentAsync();
        AllStudents.Clear();
        if (students == null) return;
        AllStudents.AddRange(students);
    }

    private void EditStudent(int id)
    {
        navigation.NavigateTo($"/student/edit/{id}");
    }

    private async Task DeleteStudent(int id)
    {
        await StudentService.DeleteStudentAsync(id);
        await LoadAllStudents();
    }
}
